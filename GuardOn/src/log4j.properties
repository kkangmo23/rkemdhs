# root logger definition
# << sample >> log4j.rootLogger=level,appenderName 
#log4j.rootLogger=DEBUG, console
log4j.rootLogger=ERROR, console

#root logger appender definition
# << sample >> log4j.appender.appenderName=appenderClassName(FQCN)
log4j.appender.console=org.apache.log4j.ConsoleAppender
#root logger layout definition
# << sample >> log4j.appender.appenderName.layout=layoutClassName(FQCN)
log4j.appender.console.layout=org.apache.log4j.PatternLayout
log4j.appender.file.layout.ConversionPattern=%-5p [%t] - %m%n




!==============================================================================
! log4j.properties - An example configuration properties file for log4j.
!
! Logging levels are:
! DEBUG < INFO < WARN < ERROR < FATAL
!==============================================================================

! turn on the internal log4j debugging flag so we can see what it is doing
#log4j.debug=true

!==============================================================================
! JDBC API layer call logging :
! INFO shows logging, DEBUG also shows where in code the jdbc calls were made,
! setting DEBUG to true might cause minor slow-down in some environments.
! If you experience too much slowness, use INFO instead.

! Log all JDBC calls except for ResultSet calls
#log4j.logger.jdbc.audit=FATAL,JDBC
#log4j.additivity.jdbc.audit=false

! Log only JDBC calls to ResultSet objects
log4j.logger.jdbc.resultset=ERROR
#log4j.additivity.jdbc.resultset=true

! Log only the SQL that is executed.
log4j.logger.jdbc.sqlonly=DEBUG
#log4j.additivity.jdbc.sqlonly=true

! Log timing information about the SQL that is executed.
#log4j.logger.jdbc.sqltiming=DEBUG
#log4j.additivity.jdbc.sqltiming=true

! Log connection open/close events and connection number dump
#log4j.logger.jdbc.connection=FATAL,connection
#log4j.additivity.jdbc.connection=false


! the appender used for the JDBC API layer call logging above, sql only
#log4j.appender.sql=org.apache.log4j.FileAppender
#log4j.appender.sql.File=./logs/sql.log
#log4j.appender.sql.Append=false
#log4j.appender.sql.layout=org.apache.log4j.PatternLayout
#log4j.appender.sql.layout.ConversionPattern=-----> %d{yyyy-MM-dd HH:mm:ss.SSS} %m%n%n

! the appender used for the JDBC API layer call logging above, sql timing
#log4j.appender.sqltiming=org.apache.log4j.FileAppender
#log4j.appender.sqltiming.File=./logs/sqltiming.log
#log4j.appender.sqltiming.Append=false
#log4j.appender.sqltiming.layout=org.apache.log4j.PatternLayout
#log4j.appender.sqltiming.layout.ConversionPattern=-----> %d{yyyy-MM-dd HH:mm:ss.SSS} %m%n%n

! the appender used for the JDBC API layer call logging above
#log4j.appender.jdbc=org.apache.log4j.FileAppender
#log4j.appender.jdbc.File=./logs/jdbc.log
#log4j.appender.jdbc.Append=false
#log4j.appender.jdbc.layout=org.apache.log4j.PatternLayout
#log4j.appender.jdbc.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss.SSS} %m%n

! the appender used for the JDBC Connection open and close events
#log4j.appender.connection=org.apache.log4j.FileAppender
#log4j.appender.connection.File=./logs/connection.log
#log4j.appender.connection.Append=false
#log4j.appender.connection.layout=org.apache.log4j.PatternLayout
#log4j.appender.connection.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss.SSS} %m%n
